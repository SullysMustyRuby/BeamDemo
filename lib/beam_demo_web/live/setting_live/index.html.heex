<h1>Listing Various Sample Settings</h1>
<p>
  This is an example of using ActiveMemory to maintain application settings and configurations. The configurations
  are by default stored in an :ets table, but can easily be changed into an :mnesia table at the <%= link "ActiveMemory.Table options.", to: "https://hexdocs.pm/active_memory/ActiveMemory.Table.html#module-options-when-creating-tables", target: "_blank" %>
</p>
<p>
  Providing a simple UI such as this will allow your Admins to update or change settings on the 
  application while running.
  The settings below are loaded from a seeds file at application boot using <%= link "ActiveMemory.Store seeding.", to: "https://hexdocs.pm/active_memory/ActiveMemory.Store.html#module-seeding", target: "_blank" %>
</p>



<%= if @live_action in [:new, :edit] do %>
  <.modal return_to={Routes.setting_index_path(@socket, :index)}>
    <.live_component
      module={BeamDemoWeb.SettingLive.FormComponent}
      id={@setting.key_name || :new}
      title={@page_title}
      action={@live_action}
      setting={@setting}
      return_to={Routes.setting_index_path(@socket, :index)}
    />
  </.modal>
<% end %>

<table>
  <thead>
    <tr>
      <th>Name</th>
      <th>Value</th>

      <th></th>
    </tr>
  </thead>
  <tbody id="settinges">
    <%= for setting <- @settings do %>
      <tr id={"setting-#{setting.key_name}"}>
        <td><%= setting.key_name %></td>
        <td><%= setting.value %></td>

        <td>
          <span><%= live_redirect "Show", to: Routes.setting_show_path(@socket, :show, setting.key_name) %></span>
          <span><%= live_patch "Edit", to: Routes.setting_index_path(@socket, :edit, setting.key_name) %></span>
          <span><%= link "Delete", to: "#", phx_click: "delete", phx_value_id: setting.key_name, data: [confirm: "Are you sure?"] %></span>
        </td>
      </tr>
    <% end %>
  </tbody>
</table>
<span><%= link "Reload All Settings", to: "#", phx_click: "reload", data: [confirm: "Are you sure?"] %></span>
<br/>
<span><%= live_patch "New Setting", to: Routes.setting_index_path(@socket, :new) %></span>
